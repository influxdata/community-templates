apiVersion: influxdata.com/v2alpha1
kind: Label
metadata:
    name: gifted_bell_eac001
spec:
    color: '#326BBA'
    name: ufos
---
apiVersion: influxdata.com/v2alpha1
kind: Bucket
metadata:
    name: cool_herschel_2ac001
spec:
    associations:
      - kind: Label
        name: gifted_bell_eac001
    name: ufo_data
---
apiVersion: influxdata.com/v2alpha1
kind: Dashboard
metadata:
    name: stupefied_northcutt_c13001
spec:
    associations:
      - kind: Label
        name: gifted_bell_eac001
    charts:
      - axes:
          - base: "10"
            name: x
            scale: linear
          - base: "10"
            name: y
            scale: linear
        colors:
          - hex: '#31C0F6'
            name: Nineteen Eighty Four
            type: scale
          - hex: '#A500A5'
            name: Nineteen Eighty Four
            type: scale
          - hex: '#FF7E27'
            name: Nineteen Eighty Four
            type: scale
        geom: line
        height: 4
        kind: Xy
        name: '# of Sightings per Year'
        position: overlaid
        queries:
          - query: |-
                import "date"
                import "strings"
                from(bucket: "ufo_data")
                  |> range(start: 1900-01-01, stop: 2014-01-01)
                  |> filter(fn: (r) => r["_measurement"] == "ufos")
                  |> filter(fn: (r) => r["_field"] == "comments")
                  |> group(columns: ["_field", "_measurement"], mode:"by")
                  |> window(every: 1y)
                  |> count()
                  |> group()
                  |> map(fn: (r) => ({ r with Year: date.year(t: r._stop) }))
                  |> keep(columns: ["_stop","Year", "_value"])
        width: 9
        xCol: _stop
        yCol: _value
      - colors:
          - hex: '#ffffff'
            name: white
            type: text
        fieldOptions:
          - displayName: Year
            fieldName: Year
            visible: true
          - displayName: State
            fieldName: State
            visible: true
          - displayName: _start
            fieldName: _start
            visible: true
          - displayName: _stop
            fieldName: _stop
            visible: true
          - displayName: _field
            fieldName: _field
            visible: true
          - displayName: _measurement
            fieldName: _measurement
            visible: true
          - displayName: state
            fieldName: state
            visible: true
          - displayName: _value
            fieldName: _value
            visible: true
          - displayName: _time
            fieldName: _time
            visible: true
          - displayName: '# of Sightings'
            fieldName: '# of Sightings'
            visible: true
          - displayName: year
            fieldName: year
            visible: true
        height: 3
        kind: Table
        name: '# of Sightings per Year'
        queries:
          - query: |-
                import "date"
                import "strings"
                from(bucket: "ufo_data")
                  |> range(start: 1900-01-01, stop: 2014-01-01)
                  |> filter(fn: (r) => r["_measurement"] == "ufos")
                  |> filter(fn: (r) => r["_field"] == "comments")
                  |> group(columns: ["_field", "_measurement"], mode:"by")
                  |> window(every: 1y)
                  |> count()
                  |> group()
                  |> map(fn: (r) => ({ r with Year: date.year(t: r._start) }))
                  |> keep(columns: ["Year", "_value"])
                  |> rename(columns: {_value: "# of Sightings"})
        tableOptions:
            fixFirstColumn: true
            sortBy: year
            verticalTimeAxis: true
        timeFormat: YYYY-MM-DD HH:mm:ss
        width: 2
        yPos: 4
      - colors:
          - hex: '#ffffff'
            name: white
            type: text
        fieldOptions:
          - displayName: Month
            fieldName: Month
            visible: true
          - displayName: Year
            fieldName: Year
            visible: true
          - displayName: State
            fieldName: State
            visible: true
          - displayName: _start
            fieldName: _start
            visible: true
          - displayName: _stop
            fieldName: _stop
            visible: true
          - displayName: _field
            fieldName: _field
            visible: true
          - displayName: _measurement
            fieldName: _measurement
            visible: true
          - displayName: state
            fieldName: state
            visible: true
          - displayName: _value
            fieldName: _value
            visible: true
          - displayName: _time
            fieldName: _time
            visible: true
          - displayName: '# of Sightings'
            fieldName: '# of Sightings'
            visible: true
          - displayName: year
            fieldName: year
            visible: true
          - displayName: Quarter
            fieldName: Quarter
            visible: true
          - displayName: city
            fieldName: city
            visible: true
          - displayName: country
            fieldName: country
            visible: true
          - displayName: shape
            fieldName: shape
            visible: true
          - displayName: month_int
            fieldName: month_int
            visible: true
        height: 3
        kind: Table
        name: '# of Sightings per Month'
        queries:
          - query: "import \"date\"\nimport \"strings\"\n\nmonth_map = strings.split(v:
                \",Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec\", t: \",\")\n\nfrom(bucket:
                \"ufo_data\")\n  |> range(start: 1900-01-01, stop: 2014-01-01)\n  |>
                filter(fn: (r) => r[\"_measurement\"] == \"ufos\")\n  |> filter(fn:
                (r) => r[\"_field\"] == \"comments\")\n  |> map(fn: (r) => ({ r with
                month_int: date.month(t: r._time) }))\n  |> group(columns: [\"_field\",
                \"_measurement\", \"month_int\"], mode:\"by\")\n  |> window(every:
                1y)\n  |> count()\n  |> group()\n   |> keep(columns: [\"month_int\",
                \"_value\"])\n   |> group(columns: [\"month_int\"], mode:\"by\")\n
                \  |> sum()\n   |> rename(columns: {_value: \"# of Sightings\"})\n
                \ |> map(fn: (r) => ({ r with Month: month_map[r.month_int] }))\n
                \ |> drop(columns: [\"month_int\"])\n//   \n//"
        tableOptions:
            fixFirstColumn: true
            sortBy: year
            verticalTimeAxis: true
        timeFormat: YYYY-MM-DD HH:mm:ss
        width: 2
        xPos: 2
        yPos: 4
      - colors:
          - hex: '#ffffff'
            name: white
            type: text
        fieldOptions:
          - displayName: Shape
            fieldName: Shape
            visible: true
          - displayName: Year
            fieldName: Year
            visible: true
          - displayName: State
            fieldName: State
            visible: true
          - displayName: _start
            fieldName: _start
            visible: true
          - displayName: _stop
            fieldName: _stop
            visible: true
          - displayName: _field
            fieldName: _field
            visible: true
          - displayName: _measurement
            fieldName: _measurement
            visible: true
          - displayName: state
            fieldName: state
            visible: true
          - displayName: _value
            fieldName: _value
            visible: true
          - displayName: _time
            fieldName: _time
            visible: true
          - displayName: '# of Sightings'
            fieldName: '# of Sightings'
            visible: true
          - displayName: year
            fieldName: year
            visible: true
          - displayName: city
            fieldName: city
            visible: true
          - displayName: shape
            fieldName: shape
            visible: true
        height: 3
        kind: Table
        name: Shape of Sightings
        queries:
          - query: |-
                import "date"
                import "strings"

                from(bucket: "ufo_data")
                  |> range(start: 1900-01-01, stop: 2014-01-01)
                  |> filter(fn: (r) => r["_measurement"] == "ufos")
                  |> filter(fn: (r) => r["_field"] == "comments")
                   |> group(columns: ["_field", "shape"], mode:"by")
                   |> count()
                   |> group()
                   |> keep(columns: ["shape", "_value"])
                   |> rename(columns: {_value: "# of Sightings", shape:"Shape"})
                //
        tableOptions:
            fixFirstColumn: true
            sortBy: year
            verticalTimeAxis: true
        timeFormat: YYYY-MM-DD HH:mm:ss
        width: 2
        xPos: 4
        yPos: 4
      - colors:
          - hex: '#ffffff'
            name: white
            type: text
        fieldOptions:
          - displayName: Country
            fieldName: Country
            visible: true
          - displayName: State
            fieldName: State
            visible: true
          - displayName: _start
            fieldName: _start
            visible: true
          - displayName: _stop
            fieldName: _stop
            visible: true
          - displayName: _field
            fieldName: _field
            visible: true
          - displayName: _measurement
            fieldName: _measurement
            visible: true
          - displayName: state
            fieldName: state
            visible: true
          - displayName: _value
            fieldName: _value
            visible: true
          - displayName: _time
            fieldName: _time
            visible: true
          - displayName: '# of Sightings'
            fieldName: '# of Sightings'
            visible: true
        height: 3
        kind: Table
        name: '# of Sightings per Country'
        queries:
          - query: |-
                import "strings"
                from(bucket: "ufo_data")
                  |> range(start: 1900-01-01, stop: 2014-01-01)
                  |> filter(fn: (r) => r["_measurement"] == "ufos")
                  |> filter(fn: (r) => exists r["country"])
                  |> filter(fn: (r) => r["_field"] == "comments")
                  |> group(columns: ["_field", "_measurement","country"], mode:"by")
                  |> count()
                  |> group()
                  |> keep(columns: ["country", "_value"])
                  |> map(fn: (r) => ({ r with country: strings.toUpper(v: r.country) }))
                  |> rename(columns: {_value: "# of Sightings", country: "Country"})
        tableOptions:
            fixFirstColumn: true
            sortBy: '# of Sightings'
            verticalTimeAxis: true
        timeFormat: YYYY-MM-DD HH:mm:ss
        width: 3
        xPos: 6
        yPos: 4
      - colors:
          - hex: '#ffffff'
            name: white
            type: text
        fieldOptions:
          - displayName: State
            fieldName: State
            visible: true
          - displayName: _start
            fieldName: _start
            visible: true
          - displayName: _stop
            fieldName: _stop
            visible: true
          - displayName: _field
            fieldName: _field
            visible: true
          - displayName: _measurement
            fieldName: _measurement
            visible: true
          - displayName: state
            fieldName: state
            visible: true
          - displayName: _value
            fieldName: _value
            visible: true
          - displayName: _time
            fieldName: _time
            visible: true
          - displayName: '# of Sightings'
            fieldName: '# of Sightings'
            visible: true
        height: 7
        kind: Table
        name: '# of Sightings per State'
        queries:
          - query: |-
                import "strings"
                from(bucket: "ufo_data")
                  |> range(start: 1900-01-01, stop: 2014-01-01)
                  |> filter(fn: (r) => r["_measurement"] == "ufos")
                  |> filter(fn: (r) => r["country"] == "us")
                  |> filter(fn: (r) => r["_field"] == "comments")
                  |> group(columns: ["_field", "_measurement","state"], mode:"by")
                  |> count()
                  |> group()
                  |> keep(columns: ["state", "_value"])
                  |> map(fn: (r) => ({ r with state: strings.toUpper(v: r.state) }))
                  |> rename(columns: {_value: "# of Sightings", state: "State"})
        tableOptions:
            fixFirstColumn: true
            sortBy: '# of Sightings'
            verticalTimeAxis: true
        timeFormat: YYYY-MM-DD HH:mm:ss
        width: 3
        xPos: 9
    description: "A dashboard for analyzing UFO sightings data."
    name: UFO Sightings
